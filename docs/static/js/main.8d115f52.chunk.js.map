{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useStorage.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","onClick","localStorage","clear","getGifs","category","a","url","fetch","data","json","resp","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","GifGridItem","src","alt","GifGrid","image","key","useStorage","getItem","newListCategories","split","console","log","push","setItem","GifExpertApp","categories","storage","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d115f52.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    localStorage.clear(\"categories\");\r\n    setCategories([]);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <form className=\"row g-3 \" onSubmit={handleSubmit}>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Buscar Gif\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button\r\n            onClick={handleClear}\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Limpiar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=8&q=${category}&api_key=0FAUWHMsNLzmwzFro6hIvqdcWwJ5VxEj`;\r\n  const data = await fetch(url);\r\n  const resp = await data.json();\r\n  const gifs = resp.data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifts\";\r\nconst useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getGifs(category);\r\n      setstate({ loading: false, data: data });\r\n    })();\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__bounceIn\">\r\n      <p>{title}</p>\r\n      <img src={url} alt={title}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: image, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3>{category}</h3>\r\n      {loading && \"Cargando...\"}\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {image.length <= 0 && (\r\n            <img\r\n              className=\"rounded mx-auto d-block pre-show\"\r\n              src=\"https://media2.giphy.com/media/26gsxasQCBItsbH4k/giphy.gif?cid=ecf05e474w83uu4282pgbwyc7xjzixsaf6f8mi0v09eun8zv&rid=giphy.gif&ct=g\"\r\n              alt=\"Spinner\"\r\n            ></img>\r\n          )}\r\n          {image.map((image) => (\r\n            <div className=\"col-md-3\" key={image.id}>\r\n              <ol>\r\n                <GifGridItem {...image} key={image.id}></GifGridItem>\r\n              </ol>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useStorage = (category) => {\r\n  const [state, setstate] = useState([]);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"categories\")) {\r\n      const data = localStorage.getItem(\"categories\");\r\n      const newListCategories = data.split(\",\");\r\n      if (category.length > 0) {\r\n        console.log(category);\r\n        newListCategories.push(category[0]);\r\n        localStorage.setItem(\"categories\", newListCategories);\r\n      }\r\n      setstate(newListCategories);\r\n    } else {\r\n      localStorage.setItem(\"categories\", category);\r\n      const data = localStorage.getItem(\"categories\");\r\n      const newListCategories = data.split(\",\");\r\n      setstate(newListCategories);\r\n    }\r\n  }, [category]);\r\n  return state;\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nimport useStorage from \"./hooks/useStorage\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const storage = useStorage(categories);\r\n\r\n  return (\r\n    <div>\r\n      <h2>GiphyApi-reactjs</h2>\r\n      <AddCategory setCategories={setCategories}></AddCategory>\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        {storage.map((category) => (\r\n          <GifGrid category={category} key={category}></GifGrid>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/bootstrap.css\";\r\n\r\nReactDom.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}